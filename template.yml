AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: Reproducing the aws lambda webapp reference architecture - a todo app - but with java.

Resources:
  TodoTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: todo-table
      PrimaryKey:
        Name: id
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      SSESpecification:
        SSEEnabled: true

  TodoApi:
    Type: AWS::Serverless::Api
    MethodSettings:
      DataTraceEnabled: true
      MetricsEnabled: true
      HttpMethod: '*'
      LoggingLevel: INFO
    AccessLogSetting:
      DestinationArn: !Sub 'arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:${ApiAccessLogGroup}'
      Format: '$context.identity.sourceIp $context.authorizer.claims.sub [$context.requestTime] "$context.httpMethod $context.resourcePath $context.protocol" $context.status $context.requestId $context.awsEndpointRequestId $context.xrayTraceId $context.responseLatency $context.integrationLatency "$context.error.message"'
    Properties:
      Name: TodoApi
      StageName: prod
      TracingEnabled: true
      Cors:
        AllowOrigin: "'*'"
        AllowMethods: "'OPTIONS,HEAD,GET,PUT,POST,DELETE'"
        AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
#      Auth:
#        Authorizers:
#          CognitoAuthorizer:
#            UserPoolArn: !GetAtt "TodoUserPool.Arn"

  ApiAccessLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/apigateway/AccessLog-${TodoApi}
      RetentionInDays: 7

  getAllTodos:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: target/webapp-refarch-todo-java-0.0.1-SNAPSHOT.jar
      Handler: todo.getall.GetAllTodosHandler
      Runtime: java11
      Description: Java function
      FunctionName: todo-getall
      MemorySize: 512
      Timeout: 10
      # Function's execution role
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSLambdaReadOnlyAccess
        - AWSXrayWriteOnlyAccess
        - AWSLambdaVPCAccessExecutionRole
      Tracing: Active
      Events:
        GetItems:
          Type: Api
          Properties:
            Path: /items
            Method: get
            RestApiId: !Ref TodoApi

  createTodo:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: target/webapp-refarch-todo-java-0.0.1-SNAPSHOT.jar
      Handler: todo.create.CreateTodoHandler
      Runtime: java11
      Description: Java function
      FunctionName: todo-create
      MemorySize: 512
      Timeout: 10
      # Function's execution role
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSLambdaReadOnlyAccess
        - AWSXrayWriteOnlyAccess
        - AWSLambdaVPCAccessExecutionRole
        - DynamoDBCrudPolicy:
            TableName: !Ref TodoTable
      Tracing: Active

  deleteTodo:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: target/webapp-refarch-todo-java-0.0.1-SNAPSHOT.jar
      Handler: todo.delete.DeleteTodoHandler
      Runtime: java11
      Description: Java function
      FunctionName: todo-delete
      MemorySize: 512
      Timeout: 10
      # Function's execution role
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSLambdaReadOnlyAccess
        - AWSXrayWriteOnlyAccess
        - AWSLambdaVPCAccessExecutionRole
        - DynamoDBCrudPolicy:
            TableName: !Ref TodoTable
      Tracing: Active